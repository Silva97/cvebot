import fetch from 'node-fetch';
import { NvdApi, NvdCve } from './nvd-api.js';

export class CveFeed {
  private feedPageUrl: string;
  private cveList: Set<string> = new Set();
  private fetchedCveList: Set<string> = new Set();

  constructor(feedPageUrl: string) {
    this.feedPageUrl = feedPageUrl;
  }

  public async fetchList(): Promise<FetchResponse> {
    const pageResponse = await fetch(this.feedPageUrl);
    const pageContent = await pageResponse.text();

    if (pageResponse.status != 200) {
      return {
        successful: false,
        failed: true,
        message: 'Failed on try to get CVE list.',
        status: pageResponse.status,
        response: pageContent,
      };
    }

    const cveList = this.parseCveListFromPageContent(pageContent);
    this.addToCveList(cveList);

    return {
      successful: true,
      failed: false,
      message: 'CVE list has been successful read.',
      status: pageResponse.status,
      response: pageContent,
    };
  }

  public async fetchNextCve(): Promise<NvdCve | null> {
    const nvd = new NvdApi();

    for (const cveId of this.cveList.values()) {
      if (!this.fetchedCveList.has(cveId)) {
        const cveContent = await nvd.getCveDetails(cveId);

        this.fetchedCveList.add(cveId);
        return cveContent;
      }
    }

    return null;
  }

  private parseCveListFromPageContent(content: string): Array<string> {
    const newEntries = content.substring(0, content.indexOf('Graduations'));

    const cveList = newEntries.match(/(?<=\>)[0-9]+\-[0-9]+/g);
    return cveList || [];
  }

  private addToCveList(list: Array<string>): void {
    for (const cve of list) {
      this.cveList.add('CVE-' + cve);
    }
  }
}

export interface CveFeedConfig {
  feedPageUrl: string;
  pageBaseUrl: string;
}

export interface FetchResponse {
  successful: boolean;
  failed: boolean;
  message: string;
  status: number;
  response: string;
}

export interface CveList {
  [key: string]: Cve;
}

export interface Cve {
  cveId: string;
  description: string;
  url: string;
}
